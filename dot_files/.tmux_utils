#!/bin/bash
tmux_split_gdb() {
    if [[ $# -gt 0 || "$1" = "--help" ]] ; then
        echo 'Split current window in panes for usage with gdb-dashboard.\n
        check ~/.gdbinit.d/tmux-dashboard.py for the layout'
        return
    fi
    # d and b are important, we want the olderst pane to be the pane where we
    # exectute gdb --for layout purposes in the python file.
    tmux split-window -dh
    tmux split-window -dbv
    # This will create:
    # s  |o   #
    # ___|    #
    #    |    #
    # c  |    #
    # where c: gdb command line, s: source, o: output, the rest of gdb-dashboard
    export TMUX_SPLIT_GDB_ON=1
}

_send_bash_command_to_session() {
    if [[ $# -eq 0 || "$1" = "--help" ]] ; then
        echo 'Usage: _send_bash_command_to_session $session_name what ever command you want: '
        return
    fi
    input_session="$1"
    input_command="${@:2}"
    for _pane in $(tmux list-panes -s -t ${input_session} -F '#{window_index}.#{pane_index}'); do
        # only apply the command in bash or zsh panes.
        _current_command=$(tmux display-message -p -t ${input_session}:${_pane} '#{pane_current_command}')
        if [ ${_current_command} = zsh ] || [ ${_current_command} = bash ] ; then
            tmux send-keys -t ${_pane} "${input_command}" Enter
        fi
    done
}

tmux_set_venv() {
    if [[ $# -eq 0 || $# -gt 1 || "$1" = "--help" ]] ; then
        echo 'Usage: tmux_set_venv virtual_env \n
        example: tmux_set_venv slicer'
        return
    fi
    _current_session=$(tmux display-message -p '#{session_name}')
    _send_bash_command_to_session ${_current_session} workon $1
}
