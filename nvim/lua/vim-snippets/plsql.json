{
  "ps": {
    "prefix": "ps",
    "body": [
      "create or replace package ${1:name}",
      "as",
      "\t${0:-- spec}",
      "end; -- end of package spec $1"
    ]
  },
  "pb": {
    "prefix": "pb",
    "body": [
      "create or replace package body ${1:name}",
      "as",
      "\t$0",
      "end; -- end of package body $1;"
    ]
  },
  "pps": {
    "prefix": "pps",
    "body": "procedure ${1:name}(${0:args});"
  },
  "ppb": {
    "prefix": "ppb",
    "body": [
      "procedure ${1:name}(${2:args})",
      "as",
      "begin",
      "\t$0",
      "end $2;"
    ]
  },
  "pfs": {
    "prefix": "pfs",
    "body": [
      "function ${1:name}(${2:args})",
      "  return ${0:type};"
    ]
  },
  "pfb": {
    "prefix": "pfb",
    "body": [
      "function ${1:name}(${2:args})",
      "  return ${3:type}",
      "as",
      "\tl_res\t$3;",
      "begin",
      "\t$0;",
      "\treturn l_res;",
      "end $1;"
    ]
  },
  "err": {
    "prefix": "err",
    "body": "show errors;"
  },
  "p": {
    "prefix": "p",
    "body": "${1:name} ${2:in} ${3:type} ${0: := null}"
  },
  "tr": {
    "prefix": "tr",
    "body": "type tr_${1:name} is record (${0:/* columns */});"
  },
  "tt": {
    "prefix": "tt",
    "body": "type tt_${1:name} is table of tr_${0:name};"
  },
  "tti": {
    "prefix": "tti",
    "body": "type tt_${1:name} is table of tr_${0:name} index by binary_integer;"
  },
  "doc": {
    "prefix": "doc",
    "body": [
      "/*",
      " *\t${0: comment ...}",
      " */"
    ]
  },
  "beg": {
    "prefix": "beg",
    "body": [
      "begin",
      "\t$0",
      "end;"
    ]
  },
  "dec": {
    "prefix": "dec",
    "body": [
      "declare",
      "\t$1",
      "begin",
      "\t$0",
      "end;"
    ]
  },
  "rpipe": {
    "prefix": "rpipe",
    "body": [
      "for ${1:i} in 1 .. ${0:l_res}.count loop",
      "\tpipe row( $2($1) );",
      "end loop;",
      "return;"
    ]
  },
  "bc": {
    "prefix": "bc",
    "body": "bulk collect into $0"
  },
  "l": {
    "prefix": "l",
    "body": "l_$1\t\t${0:number};"
  },
  "log": {
    "prefix": "log",
    "body": "dbms_output.put_line('$0');"
  },
  "for": {
    "prefix": "for",
    "body": [
      "for ${1:i} in ${2:1}..${3:42} loop",
      "\t$0",
      "end loop;"
    ]
  },
  "fors": {
    "prefix": "fors",
    "body": [
      "for ${1:rec} in (${2: select}) loop",
      "\t$0",
      "end loop;"
    ]
  },
  "forc": {
    "prefix": "forc",
    "body": [
      "for ${1:i} in ${2:l_var}.first .. $2.last loop",
      "\t${0: -- dbms_output.put_line($2($1)); }",
      "end loop;"
    ]
  },
  "if": {
    "prefix": "if",
    "body": [
      "if $1 then",
      "\t$0",
      "end if;"
    ]
  },
  "ife": {
    "prefix": "ife",
    "body": [
      "if $1 then",
      "\t$2",
      "else",
      "\t$0",
      "end if;"
    ]
  }
}
