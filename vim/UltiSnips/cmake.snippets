snippet init "Init a basic cmake" bm
cmake_minimum_required(VERSION 3.1)
project(${1:projectName})
# if(MSVC)
#    add_compile_options(/W3 /WX)
# else()
#     add_compile_options(-W -Wall -Werror)
# endif()

# set(CMAKE_INCLUDE_CURRENT_DIR ON)

add_executable(${2:exeName} $2.cpp)
#target_link_libraries($2) )
endsnippet

snippet findITK "Find ITK libs" b
find_package(ITK COMPONENTS
    ITKImageIO
    REQUIRED
    )
include(${ITK_USE_FILE})
endsnippet

snippet findBoost "Find boost Libs" b
find_package(Boost COMPONENTS 
		${1:filesystem}	${2:system}
		${3:unit_test_framework} ${4:regex}
		${5:program_options}
		REQUIRED)
include_directories(SYSTEM ${Boost_INCLUDE_DIRS})
endsnippet

snippet addexe "add_executable" b
add_executable(${1:exe} ${2:sources})
endsnippet
snippet addlib "add_library" b
add_library(${1:lib} ${2:sources})
endsnippet
snippet tdir "target_include_directory" b
target_include_directories(${1:target} ${2:PUBLIC} ${3:include})
endsnippet
snippet tlib "target_link_libraries" b
target_link_libraries(${1:target} ${2:PUBLIC} ${3:libs})
endsnippet
snippet tdef "target_compile_definitions" b
target_compile_definitions(${1:target} ${2:PRIVATE} ${3:SETTINGS})
endsnippet

snippet findGoogle "Enable Google test and Google mock" bm
### Google TEST AND MOCK
# There must be an environment variable (in .bashrc or profile.d)
# export GMOCK_HOME=/path/to/gmock-1.7.0
set(ENABLE_GOOGLE_TEST "ON" CACHE BOOL "Requires ENV variable GMOCK_HOME pointing to gmock parent folder")
set(GMOCK_HOME "$ENV{GMOCK_HOME}" CACHE PATH "Set this to gmock parent folder")
IF(ENABLE_GOOGLE_TEST)
    find_path(GTEST_INCLUDE_DIR
             gtest/gtest.h
             HINTS ${GMOCK_HOME}/gtest/include
             PATH_SUFFIXES gtest
             DOC "gtest include dir")
    find_path(GMOCK_INCLUDE_DIR
             gmock/gmock.h
             HINTS ${GMOCK_HOME}/include
             PATH_SUFFIXES gmock
             DOC "gmock include dir")
    include_directories(${GMOCK_INCLUDE_DIR} ${GTEST_INCLUDE_DIR})

    find_library(GTEST_LIBRARY
                NAMES gtest
                      libgtest
                      libgtest.a
                HINTS ${GMOCK_HOME}/mybuild/gtest
                      ${GMOCK_HOME}/gtest
                      ${GMOCK_HOME}/gtest/mybuild)
    find_library(GTEST_LIBRARY_MAIN
                NAMES gtest_main
                      libgtest_main
                      libgtest.a
                HINTS ${GMOCK_HOME}/mybuild/gtest
                      ${GMOCK_HOME}/gtest
                      ${GMOCK_HOME}/gtest/mybuild)

    find_library(GMOCK_LIBRARY
                NAMES gmock
                      libgmock
                      libgmock.a
                HINTS ${GMOCK_HOME}/mybuild
                      ${GMOCK_HOME})
    find_library(GMOCK_LIBRARY_MAIN
                NAMES gmock_main
                      libgmock_main
                      libgmock.a
                HINTS ${GMOCK_HOME}/mybuild
                      ${GMOCK_HOME})
ENDIF()
endsnippet

snippet testGoogle "Create a test executable with google" b
IF(ENABLE_GOOGLE_TEST)
    add_executable(${1:exeTestName} $1.cpp)
    target_link_libraries($1 ${GMOCK_LIBRARY_MAIN} ${GTEST_LIBRARY_MAIN})
ENDIF()
endsnippet
