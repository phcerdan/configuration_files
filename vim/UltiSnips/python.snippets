snippet docnp "numpy docs template" bm
"""
${6:One liner}

Parameters
----------
${1:arg1} : ${2:type}
    ${3:Description}

Returns
-------
${4:type}
    ${5:Description}
"""
endsnippet

snippet licsgext "license with my name and reference to LICENSE" b
"""
Copyright (C) 2021 Pablo Hernande-Cerdan.

This file is part of SGEXT: http://github.com/phcerdan/sgext.

This file may be used under the terms of the GNU General Public License
version 3 as published by the Free Software Foundation and appearing in
the file LICENSE.GPL included in the packaging of this file.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
"""

endsnippet

snippet licmpl "license with my name and reference to LICENSE" b
# Copyright (C) 2021 Pablo Hernandez-Cerdan
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

endsnippet

global !p
import vim
def commentLine(ll = 40):
	try:
	    xrange
	except:
	    xrange=range
	r="#"
	for a in xrange(ll - 2):
		r+="#"
	r+="#"
	return r

endglobal
snippet "(\/\/(\s)?)?sep" "---- ----//" rb
`!p snip.rv = commentLine()`
endsnippet
snippet com "Comment #" b
# ${1:Comment}
endsnippet
snippet comlin "Comment line" !b
# ########### ${1:TEXT} ###############
endsnippet
snippet comsep "Comment Separator, with fixed length" !b
`!p snip.rv = commentLine()`
# ########### ${1:TEXT} ###############
`!p snip.rv = commentLine()`
$0
endsnippet

snippet getabs "Django: get_absolute_url"
def get_absolute_url(self):
	from django.urls import reverse
	return reverse('${1:my_model}.views.details', args=[str(self.id)])

endsnippet
